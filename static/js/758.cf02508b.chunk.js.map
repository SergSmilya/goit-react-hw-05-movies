{"version":3,"file":"static/js/758.cf02508b.chunk.js","mappings":"oMAEe,SAASA,EAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,SAAUC,EAAM,EAANA,GAC3CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,SACGF,KAIR,C,yFCVc,SAASO,EAAT,GAAqC,IAAnBP,EAAkB,EAAlBA,SAAUQ,EAAQ,EAARA,KACzC,OAAO,mBAAQA,KAAMA,EAAd,SAAqBR,GAC7B,C,aCAc,SAASS,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,sBACpC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,kBAAMC,SARR,SAAsBC,GACpBA,EAAEC,iBAEFN,EAAsBK,EAAEE,OAAOC,OAAOC,OACtCN,EAAS,GACV,EAGC,WACE,uCAEE,kBACEL,KAAK,SACLY,KAAK,SACLC,SAlBR,SAAsBN,GACpBF,EAASE,EAAEE,OAAOE,MACnB,EAiBOA,MAAOP,EACPU,WAAS,EACTC,YAAY,oCAIhB,SAAChB,EAAD,CAAQC,KAAM,SAAd,sBAGL,C,uCC5Bc,SAASgB,IACtB,OAA0Cb,EAAAA,EAAAA,WAAS,iBAAM,EAAN,IAAnD,eAAOc,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAaA,OAPAC,EAAAA,EAAAA,YAAU,WAC0B,OAA9BF,EAAaG,IAAI,WACrBC,EAAAA,EAAAA,IAAWJ,EAAaG,IAAI,UAAUE,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OACzCR,EAAiBQ,EADwB,GAG5C,GAAE,CAACN,KAGF,4BACE,SAACnB,EAAD,CAAaC,sBAbjB,SAA+BE,GAC7BiB,EAAgB,CAAEjB,MAAAA,GACnB,IAaIa,EAAcW,OAAS,IACtB,SAACC,EAAA,EAAD,UACGZ,EAAca,KAAI,gBAAGrC,EAAH,EAAGA,GAAIsC,EAAP,EAAOA,eAAP,OACjB,SAACxC,EAAA,EAAD,CAAyBE,GAAIA,EAA7B,SACGsC,GADkBtC,EADJ,QAS5B,C","sources":["components/MovieItemForId/MovieItemForId.jsx","components/Button/Button.jsx","components/InputSearch/InputSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport default function MovieItemForId({ children, id }) {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {children}\n      </Link>\n    </li>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function Button({ children, type }) {\n  return <button type={type}>{children}</button>;\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import Button from 'components/Button/Button';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function InputSearch({ handleWriteQueryInput }) {\n  const [query, setQuery] = useState('');\n\n  function handleChange(e) {\n    setQuery(e.target.value);\n  }\n\n  function handleSabmit(e) {\n    e.preventDefault();\n\n    handleWriteQueryInput(e.target.search.value);\n    setQuery('');\n  }\n\n  return (\n    <form onSubmit={handleSabmit}>\n      <label>\n        Search\n        <input\n          type=\"search\"\n          name=\"search\"\n          onChange={handleChange}\n          value={query}\n          autoFocus\n          placeholder=\"Enter the name of the movie\"\n        />\n      </label>\n\n      <Button type={'submit'}>Search</Button>\n    </form>\n  );\n}\n\nInputSearch.propTypes = {\n  handleWriteQueryInput: PropTypes.func.isRequired,\n};\n","import InputSearch from 'components/InputSearch/InputSearch';\nimport List from 'components/List/List';\nimport MovieItemForId from 'components/MovieItemForId/MovieItemForId';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { apiMovItem } from 'services/Api';\n\nexport default function Movies() {\n  const [searchFilmArr, setSearchFilmArr] = useState(() => []);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function handleWriteQueryInput(query) {\n    setSearchParams({ query });\n  }\n\n  useEffect(() => {\n    if (searchParams.get('query') === null) return;\n    apiMovItem(searchParams.get('query')).then(({ data: { results } }) =>\n      setSearchFilmArr(results)\n    );\n  }, [searchParams]);\n\n  return (\n    <div>\n      <InputSearch handleWriteQueryInput={handleWriteQueryInput} />\n\n      {searchFilmArr.length > 0 && (\n        <List>\n          {searchFilmArr.map(({ id, original_title }) => (\n            <MovieItemForId key={id} id={id}>\n              {original_title}\n            </MovieItemForId>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n}\n\n// import InputSearch from 'components/InputSearch/InputSearch';\n// import List from 'components/List/List';\n// import MovieItemForId from 'components/MovieItemForId/MovieItemForId';\n// import { useEffect, useState } from 'react';\n// import { apiMovItem } from 'services/Api';\n\n// export default function Movies() {\n//   const [queryInput, setQueryInput] = useState('');\n//   const [searchFilmArr, setSearchFilmArr] = useState(() => []);\n\n//   function handleWriteQueryInput(queryIn) {\n//     setQueryInput(queryIn);\n//   }\n\n//   useEffect(() => {\n//     if (queryInput === '') return;\n//     apiMovItem(queryInput).then(({ data: { results } }) =>\n//       setSearchFilmArr(results)\n//     );\n//   }, [queryInput]);\n\n//   return (\n//     <div>\n//       <InputSearch handleWriteQueryInput={handleWriteQueryInput} />\n\n//       {searchFilmArr.length > 0 && (\n//         <List>\n//           {searchFilmArr.map(({ id, original_title }) => (\n//             <MovieItemForId key={id} id={id}>\n//               {original_title}\n//             </MovieItemForId>\n//           ))}\n//         </List>\n//       )}\n//     </div>\n//   );\n// }\n"],"names":["MovieItemForId","children","id","location","useLocation","to","state","from","Button","type","InputSearch","handleWriteQueryInput","useState","query","setQuery","onSubmit","e","preventDefault","target","search","value","name","onChange","autoFocus","placeholder","Movies","searchFilmArr","setSearchFilmArr","useSearchParams","searchParams","setSearchParams","useEffect","get","apiMovItem","then","results","data","length","List","map","original_title"],"sourceRoot":""}