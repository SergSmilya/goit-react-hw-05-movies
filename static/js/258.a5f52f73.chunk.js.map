{"version":3,"file":"static/js/258.a5f52f73.chunk.js","mappings":"mLAAe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,OAAO,wBAAKA,GACb,C,0GCCc,SAASC,EAAT,GAAmC,IAAbD,EAAY,EAAZA,SACnC,OACE,4BACE,wBAAKA,KACL,UAACD,EAAA,EAAD,YACE,yBACE,SAAC,KAAD,CAAMG,GAAG,OAAT,UACE,qCAGJ,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,UACE,4CAMX,C,wCCdc,SAASC,IAAS,IAAD,IAExBC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE5CC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAGEC,EAMEF,EANFE,eACAC,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,OACAC,EAGEL,EAHFK,YACAC,EAEEN,EAFFM,aACAC,EACEP,EADFO,aAUF,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAOZ,GACJa,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcV,EAASU,EAAvB,IACLC,MAAMC,QAAQC,KACdC,SACJ,GAAE,CAAClB,KAGF,4BACE,SAAC,KAAD,CAAMR,GAAII,EAAauB,QAAvB,qBAGChB,EAAMI,SACL,4BACE,gBAAKa,IAAG,UA9BA,mCA8BA,OAAeZ,GAAea,IAAKhB,KAC3C,0BACGA,EADH,KACmB,0BAAO,IAAIiB,KAAKb,GAAcc,gBADjD,QAKA,uCAEE,gCAAkC,GAA1Bb,EAAac,QAAQ,GAA7B,WAGF,qCACA,uBAAIlB,KAEJ,mCACA,SAACjB,EAAA,EAAD,UACGkB,EAAOkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,eAAaD,GAAIA,EAAjB,UACE,uBAAIC,KADGD,EADC,UASlB,UAAC,EAAAE,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,iBAAiB,GACjBC,iBAAiB,GACjBC,SAAS,GACTC,UAAU,6BAZhB,WAgBE,SAAChD,EAAD,sCACA,SAAC,KAAD,SAIP,C,+LClFKiD,EAAU,mCACVC,EAAM,+BAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGAEUC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uCAAsCD,IAFrD,sLAQA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAAsBZ,GAAtB,2FAEU2C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAiBzC,EAAjB,oBAAkCwC,IAFjD,sLAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,2FAEUF,EAAAA,EAAAA,GAAM,GAAD,OACbF,EADa,iCACeD,EADf,kBACgCK,IAH/C,sLAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B9C,GAA7B,2FAEU2C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAiBzC,EAAjB,4BAA0CwC,IAFzD,sLAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0B/C,GAA1B,2FAEU2C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAiBzC,EAAjB,4BAA0CwC,IAFzD,sL","sources":["components/List/List.jsx","components/Additional/Additional.jsx","pages/MovieDetails.jsx","services/Api.js"],"sourcesContent":["export default function List({ children }) {\n  return <ul>{children}</ul>;\n}\n","import List from 'components/List/List';\nimport { Link } from 'react-router-dom';\n\nexport default function Additional({ children }) {\n  return (\n    <div>\n      <h3>{children}</h3>\n      <List>\n        <li>\n          <Link to=\"cast\">\n            <p>Cast</p>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">\n            <p>Reviews</p>\n          </Link>\n        </li>\n      </List>\n    </div>\n  );\n}\n","import Additional from 'components/Additional/Additional';\nimport List from 'components/List/List';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { apiMov } from 'services/Api';\nimport { CirclesWithBar } from 'react-loader-spinner';\n\nexport default function Movie() {\n  const URL_IMG = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  const { movId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  const {\n    original_title,\n    overview,\n    genres,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  useEffect(() => {\n    apiMov(movId)\n      .then(({ data }) => setMovie(data))\n      .catch(console.log)\n      .finally();\n  }, [movId]);\n\n  return (\n    <div>\n      <Link to={backLocation.current}>Go Back</Link>\n\n      {/* Розбити на компоненти */}\n      {movie.genres && (\n        <div>\n          <img src={`${URL_IMG}${poster_path}`} alt={original_title}></img>\n          <h2>\n            {original_title}(<span>{new Date(release_date).getFullYear()}</span>\n            )\n          </h2>\n\n          <p>\n            User Score\n            <span> {vote_average.toFixed(1) * 10}%</span>\n          </p>\n\n          <p>Overview</p>\n          <p>{overview}</p>\n\n          <p>Genres</p>\n          <List>\n            {genres.map(({ id, name }) => (\n              <li key={id} id={id}>\n                <p>{name}</p>\n              </li>\n            ))}\n          </List>\n        </div>\n      )}\n\n      <Suspense\n        fallback={\n          <CirclesWithBar\n            height=\"100\"\n            width=\"100\"\n            color=\"#4fa94d\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            barColor=\"\"\n            ariaLabel=\"circles-with-bar-loading\"\n          />\n        }\n      >\n        <Additional>Additional information</Additional>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'ad2c844e7719e1ada80161a84523905b';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport async function Api() {\n  try {\n    return await axios(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMov(movId) {\n  try {\n    return await axios(`${URL}/movie/${movId}?api_key=${API_KEY}`);\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMovItem(movName) {\n  try {\n    return await axios(\n      `${URL}/search/movie?api_key=${API_KEY}&query=${movName}`\n    );\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMovReviews(movId) {\n  try {\n    return await axios(`${URL}/movie/${movId}/reviews?api_key=${API_KEY}`);\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMovCast(movId) {\n  try {\n    return await axios(`${URL}/movie/${movId}/credits?api_key=${API_KEY}`);\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["List","children","Additional","to","Movie","location","useLocation","backLocation","useRef","state","from","movId","useParams","useState","movie","setMovie","original_title","overview","genres","poster_path","release_date","vote_average","useEffect","apiMov","then","data","catch","console","log","finally","current","src","alt","Date","getFullYear","toFixed","map","id","name","Suspense","fallback","height","width","color","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","API_KEY","URL","Api","axios","apiMovItem","movName","apiMovReviews","apiMovCast"],"sourceRoot":""}